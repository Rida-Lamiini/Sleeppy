import { SessionManager } from '../../sessionManager';
import { getClaim } from './getClaim';
import { getClaims } from './getClaims';
import { getCurrentOrganization } from './getCurrentOrganization';
import { getDecodedToken } from './getDecodedToken';
import { getFlag } from './getFlag';
import { getUserProfile, UserProfile } from './getUserProfile';
import { getPermission, PermissionAccess } from './getPermission';
import { getPermissions, Permissions } from './getPermissions';
import { getUserOrganizations } from './getUserOrganistaions';
import { getRoles } from './getRoles';
import { isAuthenticated } from './isAuthenticated';
import { refreshToken } from './refreshToken';
/**
 * Sets the active storage
 * @param store Session manager instance
 */
declare const setActiveStorage: (store: SessionManager) => void;
/**
 * Gets the current active storage
 * @returns Session manager instance or null
 */
declare const getActiveStorage: () => SessionManager | null;
/**
 * Checks if there is an active storage
 * @returns boolean
 */
declare const hasActiveStorage: () => boolean;
/**
 * Clears the active storage
 */
declare const clearActiveStorage: () => void;
/**
 * Sets the active storage
 * @param store Session manager instance
 */
declare const setInsecureStorage: (store: SessionManager) => void;
/**
 * Gets the current active storage
 * @returns Session manager instance or null
 */
declare const getInsecureStorage: () => SessionManager | null;
/**
 * Checks if there is an active storage
 * @returns boolean
 */
declare const hasInsecureStorage: () => boolean;
/**
 * Clears the active storage
 */
declare const clearInsecureStorage: () => void;
export { setActiveStorage, getActiveStorage, hasActiveStorage, clearActiveStorage, setInsecureStorage, getInsecureStorage, hasInsecureStorage, clearInsecureStorage, getClaim, getClaims, getCurrentOrganization, getDecodedToken, getFlag, getUserProfile, getPermission, getPermissions, getUserOrganizations, getRoles, isAuthenticated, refreshToken, };
export type { UserProfile, Permissions, PermissionAccess };
